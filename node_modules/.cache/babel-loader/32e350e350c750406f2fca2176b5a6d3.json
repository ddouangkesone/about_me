{"ast":null,"code":"import _classCallCheck from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dosebot/Documents/Projects/about_me/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dosebot/Documents/Projects/about_me/src/components/Percentage.jsx\";\nimport React from 'react';\nimport ScrollTrigger from 'react-scroll-trigger';\nimport { Line } from 'rc-progress';\n\nvar Percentage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Percentage, _React$Component);\n\n  function Percentage() {\n    var _this;\n\n    _classCallCheck(this, Percentage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Percentage).call(this));\n    _this.state = {\n      count: 0,\n      inFocus: false\n    };\n    _this.increase = _this.increase.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.restart = _this.restart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Percentage, [{\n    key: \"increase\",\n    value: function increase() {\n      var percent = this.props.percent;\n      var count = this.state.count + 1;\n\n      if (count > percent) {\n        clearTimeout(this.tm);\n        return;\n      }\n\n      this.setState({\n        count: count\n      });\n      this.tm = setTimeout(this.increase, 10);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      var _this2 = this;\n\n      clearTimeout(this.tm);\n      this.setState({\n        count: 0\n      }, function () {\n        _this2.increase();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$label = this.props.label,\n          label = _this$props$label === void 0 ? 'HTML' : _this$props$label;\n      var count = this.state.count;\n      return React.createElement(\"div\", {\n        className: \"w-100 flex items-center justify-between ph5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"w-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        className: \"w-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Line, {\n        percent: count,\n        strokeWidth: \"7\",\n        trailWidth: \"0\",\n        strokeColor: \"#D3D3D3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, count, \"%\"));\n    }\n  }]);\n\n  return Percentage;\n}(React.Component);\n\nexport default Percentage;","map":{"version":3,"sources":["/Users/dosebot/Documents/Projects/about_me/src/components/Percentage.jsx"],"names":["React","ScrollTrigger","Line","Percentage","state","count","inFocus","increase","bind","restart","percent","props","clearTimeout","tm","setState","setTimeout","label","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,aAArB;;IAEMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AAPY;AAQb;;;;+BAIU;AAAA,UACDE,OADC,GACW,KAAKC,KADhB,CACDD,OADC;AAET,UAAML,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAjC;;AACA,UAAIA,KAAK,GAAGK,OAAZ,EAAqB;AACnBE,QAAAA,YAAY,CAAC,KAAKC,EAAN,CAAZ;AACA;AACD;;AACD,WAAKC,QAAL,CAAc;AAAET,QAAAA,KAAK,EAALA;AAAF,OAAd;AACA,WAAKQ,EAAL,GAAUE,UAAU,CAAC,KAAKR,QAAN,EAAgB,EAAhB,CAApB;AACD;;;8BAES;AAAA;;AACRK,MAAAA,YAAY,CAAC,KAAKC,EAAN,CAAZ;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAd,EAA4B,YAAM;AAChC,QAAA,MAAI,CAACE,QAAL;AACD,OAFD;AAGD;;;6BAEQ;AAAA,8BACoB,KAAKI,KADzB,CACCK,KADD;AAAA,UACCA,KADD,kCACS,MADT;AAAA,UAECX,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAIP,aACE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,KADH,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAEX,KAAf;AAAsB,QAAA,WAAW,EAAC,GAAlC;AAAsC,QAAA,UAAU,EAAC,GAAjD;AAAqD,QAAA,WAAW,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KADH,MARF,CADF;AAgBD;;;;EAnDsBL,KAAK,CAACiB,S;;AAsD/B,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport ScrollTrigger from 'react-scroll-trigger';\nimport { Line } from 'rc-progress';\n\nclass Percentage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      inFocus: false\n    };\n    this.increase = this.increase.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n\n\n  increase() {\n    const { percent } = this.props\n    const count = this.state.count + 1;\n    if (count > percent) {\n      clearTimeout(this.tm);\n      return;\n    }\n    this.setState({ count });\n    this.tm = setTimeout(this.increase, 10);\n  }\n\n  restart() {\n    clearTimeout(this.tm);\n    this.setState({ count: 0 }, () => {\n      this.increase();\n    });\n  }\n\n  render() {\n    const { label = 'HTML' } = this.props\n    const { count } = this.state\n\n    return (\n      <div className=\"w-100 flex items-center justify-between ph5\">\n        <span className=\"w-20\">\n          {label}\n        </span>\n        {/* <ScrollTrigger onEnter={() => { this.increase() }}> */}\n        <div className=\"w-75\">\n          <Line percent={count} strokeWidth=\"7\" trailWidth=\"0\" strokeColor=\"#D3D3D3\" />\n        </div>\n        <span>\n          {count}%\n          </span>\n        {/* </ScrollTrigger> */}\n\n      </div>\n    )\n  }\n}\n\nexport default Percentage"]},"metadata":{},"sourceType":"module"}